---
source: crates/oxc_linter/src/tester.rs
---
  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:1:29]
 1 │ doThing().then(function() { return Promise.resolve(4) })
   ·                             ─────────────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:1:35]
 1 │ doThing().then(null, function() { return Promise.resolve(4) })
   ·                                   ─────────────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:1:30]
 1 │ doThing().catch(function() { return Promise.resolve(4) })
   ·                              ─────────────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Expected throw instead of Promise.reject
   ╭─[no_return_wrap.tsx:1:29]
 1 │ doThing().then(function() { return Promise.reject(4) })
   ·                             ────────────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Expected throw instead of Promise.reject
   ╭─[no_return_wrap.tsx:1:35]
 1 │ doThing().then(null, function() { return Promise.reject(4) })
   ·                                   ────────────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Expected throw instead of Promise.reject
   ╭─[no_return_wrap.tsx:1:30]
 1 │ doThing().catch(function() { return Promise.reject(4) })
   ·                              ────────────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:1:41]
 1 │ doThing().then(function(x) { if (x>1) { return Promise.resolve(4) } else { throw "bad" } })
   ·                                         ─────────────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Expected throw instead of Promise.reject
   ╭─[no_return_wrap.tsx:1:41]
 1 │ doThing().then(function(x) { if (x>1) { return Promise.reject(4) } })
   ·                                         ────────────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:1:56]
 1 │ doThing().then(null, function() { if (true && false) { return Promise.resolve() } })
   ·                                                        ────────────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:1:39]
 1 │ doThing().catch(function(x) {if (x) { return Promise.resolve(4) } else { return Promise.reject() } })
   ·                                       ─────────────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Expected throw instead of Promise.reject
   ╭─[no_return_wrap.tsx:1:74]
 1 │ doThing().catch(function(x) {if (x) { return Promise.resolve(4) } else { return Promise.reject() } })
   ·                                                                          ───────────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:4:14]
 3 │                     doThing().then(function() {
 4 │                       return Promise.resolve(4)
   ·                       ─────────────────────────
 5 │                     })
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:4:14]
 3 │                     doThing().then(function nm() {
 4 │                       return Promise.resolve(4)
   ·                       ─────────────────────────
 5 │                     })
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:5:16]
 4 │                       doThing().then(function() {
 5 │                         return Promise.resolve(4)
   ·                         ─────────────────────────
 6 │                       })
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:8:16]
 7 │                         })
 8 │                         return Promise.resolve(4)
   ·                         ─────────────────────────
 9 │                       })
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:5:16]
 4 │                       return doThing().then(function() {
 5 │                         return Promise.resolve(5);
   ·                         ──────────────────────────
 6 │                       });
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:4:14]
 3 │                     doThing().then(function() {
 4 │                       return Promise.resolve(5);
   ·                       ──────────────────────────
 5 │                     })
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:1:30]
 1 │ doThing().then((function() { return Promise.resolve(4) }).bind(this))
   ·                              ─────────────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:1:30]
 1 │ doThing().then((function() { return Promise.resolve(4) }).bind(this).bind(this))
   ·                              ─────────────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:1:24]
 1 │ doThing().then(() => { return Promise.resolve(4) })
   ·                        ─────────────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:4:14]
 3 │                     return p.then(function(val) {
 4 │                       return Promise.resolve(val * 4)
   ·                       ───────────────────────────────
 5 │                     })
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:1:23]
 1 │ doThing1().then(() => Promise.resolve(9))
   ·                       ──────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Expected throw instead of Promise.reject
   ╭─[no_return_wrap.tsx:1:22]
 1 │ doThing().then(() => Promise.reject(4))
   ·                      ─────────────────
   ╰────
